<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" title="comfortvilleLoginView">

	
	<s:navigationContent/>
	
		<s:layout>
			<s:VerticalLayout/>
			
		</s:layout>	
		
	<fx:Script>
		<![CDATA[
			import flash.events.FocusEvent;
			
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import model.Credentials;
			
			import services.authenticate.Authenticate;
			
			import tools.Settings;
		
			
			private var authenticate:Authenticate=Settings.authenticate;
			
			private function getCredentials(): Credentials {
				return new Credentials(loginInput.text, passwordInput.text, rememberCheck.selected);
			}
			
			protected function search_clickHandler(event:MouseEvent):void
			{
					navigator.pushView(comfortvilleSearchView);}
				
			protected function rating_clickHandler(event:MouseEvent):void
				{
					navigator.pushView(comfortvilleRatingView);}
					
			protected function news_clickHandler(event:MouseEvent):void
					{
					navigator.pushView(comfortvilleNewsView);}
						
			protected function account_clickHandler(event:MouseEvent):void
						{
					navigator.pushView(comfortvilleAccountView);}
			
			
			protected function loginButton_clickHandler(event:MouseEvent):void
			{
				// Вставить навигатор, закомментить логин респондер токен
				// loginResponder.token = authenticate.authenticate(getCredentials().toJson());
					navigator.pushView(comfortvilleAccountView);
			}
			
			protected function registrationButton_clickHandler (event:MouseEvent):void
			{
				navigator.pushView(comfortvilleRegistrationView);
			}
			
			protected function loginResponder_resultHandler(event:ResultEvent):void
			{
				var res:Object = {};
				if (event.result!=null)
					res = JSON.parse(event.result as String);
				if (res.hasOwnProperty("id_token")) {
					Settings.token = res.id_token;
					navigator.pushView(comfortvilleAccountView);
				}
				else
					Settings.token = "";
				
			}
			
			protected function loginResponder_faultHandler(event:FaultEvent):void
			{
				trace(event.fault.faultString+event.fault.faultDetail);	
				Settings.token = "";
			}
			
			
			// Placeholder fot loginInput
			private var loginInput_text:String = "Имя пользователя...";
			
			protected function loginInput_initializeHandler(event:FlexEvent):void
			{
				//For Place Holder for loginInput
				loginInput.addEventListener(FocusEvent.FOCUS_IN, focusin);
				loginInput.addEventListener(FocusEvent.FOCUS_OUT, focusout);  
			}
			
			//fire when click to edit
			public function focusin(event:Event ) : void
			{
					if(loginInput.text == loginInput_text)
				{
					loginInput.text = "";
				}
			}
			
			//fire when you clicked out
			public function focusout(event:Event):void
			{
					if(loginInput.text == "")
				{
					loginInput.text = loginInput_text;
				}
			}
			
			
			// Placeholder fot passwordInput
			private var passwordInput_text:String = "Пароль...";
			protected function passwordInput_initializeHandler(event:FlexEvent):void
			{
				//For Place Holder for passwordInput
				passwordInput.addEventListener(FocusEvent.FOCUS_IN, passwordfocusin);
				passwordInput.addEventListener(FocusEvent.FOCUS_OUT, passwordfocusout);  
			}
			
			//fire when click to edit
			public function passwordfocusin(event:Event): void
			{
				if(passwordInput.text == passwordInput_text)
				{
					passwordInput.text = "";
				}
			}
			
			//fire when you clicked out
			public function passwordfocusout(event:Event):void
			{
				if(passwordInput.text == "")
				{
					passwordInput.text = passwordInput_text;
				}
			}
			
			
		]]>
	</fx:Script>
		
		

	<fx:Declarations>
		<s:CallResponder id="loginResponder" result="loginResponder_resultHandler(event)" 
						 fault="loginResponder_faultHandler(event)" />
	</fx:Declarations>


	
	<s:Group width="100%">
		<s:Label horizontalCenter="0" text="Войдите" top="40" width="90%" fontStyle="normal" color="#663366" fontSize="42" fontWeight="bold" fontFamily="PT Sans, sans-serif"> 
		</s:Label> 
	</s:Group>
	
	<s:VGroup width="100%" height="100%" >
		<s:Scroller width="100%" height="100%" horizontalCenter="0">
			<s:VGroup>
	
	
	<s:Group width="100%" >
		<s:TextInput  top="20" horizontalCenter="0" width="90%" height="200%"  fontSize="42"  id="loginInput" text="Имя пользователя..." initialize="loginInput_initializeHandler(event)" />
	</s:Group>
	
	<s:Group width="100%" >
		<s:TextInput top="20" bottom="20" horizontalCenter="0" width="90%" fontSize="42"  id="passwordInput" text="Пароль..." initialize="passwordInput_initializeHandler(event)"/>
	</s:Group> 
	
	<s:Group width="100%" >
		<s:HGroup width="90%" verticalAlign="bottom" horizontalAlign="center" horizontalCenter="0" >
			<s:CheckBox scaleX="0.7" scaleY="0.7" id="rememberCheck" verticalCenter="0"/>
			<s:Label verticalAlign="bottom" text="Запомнить меня" top="40"  fontStyle="normal" color="#663366" fontSize="36" fontWeight="bold" fontFamily="PT Sans, sans-serif"/>
		</s:HGroup>
	</s:Group>
	
	<s:Group width="100%">
		<s:Button label="Войти" horizontalCenter="0" top="40"  id="loginButton" click="loginButton_clickHandler(event)"/>
			
		<!--	   chromeColor="#ff9966" color="white" fontStyle="normal" fontSize="42" fontWeight="bold" fontFamily="PT Sans, sans-serif" -->
				
	</s:Group>
	<s:Group width="100%">
		<s:Label id="registrationButton" click="registrationButton_clickHandler(event)" horizontalCenter="0" text="Или зарегистрируйтесь" textDecoration="underline" top="20" fontStyle="normal" fontWeight="bold" color="#663366" fontSize="36" fontFamily="PT Sans, sans-serif" />
	</s:Group>
	

	</s:VGroup>
		</s:Scroller>
	</s:VGroup>  
	

	

	<s:viewMenuItems>
		<s:ViewMenuItem color="#663366"  icon="/assets/search-64.png" label="Поиск" id="search" click="search_clickHandler(event)"/> 
		<s:ViewMenuItem color="#663366"  icon="/assets/rating-64.png" label="Рейтинг" id="rating" click="rating_clickHandler(event)"/> 
		<s:ViewMenuItem color="#663366"  icon="/assets/news-64.png" label="Новости" id="news" click="news_clickHandler(event)"/> 
		<s:ViewMenuItem color="#663366"  icon="/assets/user-64.png" label="Аккаунт" id="account" click="account_clickHandler(event)"/>
	</s:viewMenuItems> 
	
	
		
</s:View>
